remove @+ from @+else in cweave.w and ctangle.w
(only to check that parsing works OK - after that revert back)

remove C++ keywords "new" and "delete"

make this example work in cweave:
@ @d eprintf(...) fprintf(stderr, __VA_ARGS__)

make in the following examples that space will be added before `L' in ctangle:
@ @c return L'\0';
@ @c case L'\0':
@ @c wprintf(PROG_NAME L"version 0.1\n");
and understand how newline is preserved in ctangle if it is used before `L' in these examples
(NOTE: in this case whitespace before L is not needed: L"two"L"strings")

at value 127 of hash_size cweave works OK, at value 113 it breaks in
@<Look for matches for new name among...@>=, because of Segmentation fault

remove special processing of '->', '::', '.*', '->*' as in commit 8d510b989190b313e3c07bae54151e933d9b3b44 and 49cd5dec3241e80835bbb15479acb6fb9b5dd4b9 in goweb repo

-------------------

TODO: find out which productions are applied in this example
(see @1 instead of @2)

  @ @c @2
  typedef uint32_t pixel_t;

and why it does not print "\&{typedef} \&{uint32\_t} \&{pixel\_t}",
as it is done for "typedef short boolean;"

Then check the following example and fix it too if second pixel_t will not be bold:

  @ @c @2
  typedef uint32_t pixel_t;
  void main(void)
  {
    int x = sizeof(pixel_t);
  }
